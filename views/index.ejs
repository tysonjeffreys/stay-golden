<!DOCTYPE html>
<html lang="en">

<%- include('layouts/header'); -%>

<body>

<a class="nav-link" href="/upload">New Post</a>
<main>
  <div id="pageWrapper">
    <div id="container" class="container">
          <div class="row-1" id="row1">
            <div class="logo-column" id="logoColumn"></div>
            <div class="logo" id="logo">STAY GOLDEN</div>
          </div>      
    </div>
 
  </div>
</main>
  
<footer>
  
</footer>

</body>

<script>


let page = 0;
document.addEventListener("DOMContentLoaded", () => {
  let main = document.querySelector("main")
  let options = {
    root: null,
    rootMargins: "0px",
    threshold: 0
  };
  
  //Using IntersectionObserver to implement an infinite scroll
  const observer = new IntersectionObserver(handleIntersect, options);
  observer.observe(document.querySelector("footer"));
  //an initial load of the page
  getData(page);
})

function handleIntersect(entries) { 
  if (entries[0].isIntersecting) {
    console.warn("something is intersecting with the viewport");

    getData(page);
  }
}

function incrementPage() {
  return page++;
}

function getData(page) {
let main = document.querySelector("main")
let URL = '/homeData/' + page;
console.log('This is page number' + page)
fetch(URL)
.then(function(response) {
  return response.json()
})
.then(function(imageposts) {


console.log(imageposts)
let allData = imageposts.map(ele => ele.totalData.map(imageArray => imageArray))
console.log(allData[0])

allData.forEach(response => {
  response.forEach(eachImage => {
    console.log(eachImage)
    

    let pageWrapper = document.createElement('pageWrapper')
    let container = document.createElement('container')
    container.setAttribute('class', 'container')
    let row1 = document.createElement('row1')
    row1.setAttribute('class', 'row-1')
    let logoColumn = document.createElement('logoColumn')
    logoColumn.setAttribute('class','logo-column')
    let logo = document.createElement('logo')
    let logoTextNode = document.createTextNode("STAY GOLDEN")
    logo.appendChild(logoTextNode)
    logo.setAttribute('class', 'logo')
    let row2 = document.createElement('row2')
    row2.setAttribute('class', 'row-2')
    let leftColumn = document.createElement('leftColumn')
    leftColumn.setAttribute('class', 'left-column')
    let bicycleMap = document.createElement('bicycleMap')
    bicycleMap.setAttribute('class', 'bicycle-map')
    let bicycleMapImage = document.createElement('img')
    bicycleMapImage.src = "img/bicycle-pin-svgrepo-com.svg"
    let homeImage = document.createElement('homeImage')
    homeImage.setAttribute('class', 'home-image')
    
    
    let titleColumn = document.createElement('titleColumn')
    titleColumn.setAttribute('class', 'title-column')
    let imageTitle = document.createElement('imageTitle')
    let titleTextNode = document.createTextNode(eachImage.city + ", " + eachImage.state)
    imageTitle.appendChild(titleTextNode)
    imageTitle.setAttribute('class', 'title')
    let br = document.createElement('br')
    let date = document.createElement('date')
    date.setAttribute('class', 'date')
    let dateTextNode = document.createTextNode(new Date(eachImage.datePosted).toDateString())
    date.appendChild(dateTextNode)
    let mainHomeImage = document.createElement('img')
    mainHomeImage.src = eachImage.image
    

    pageWrapper.append(container)
    container.append(row1)
    
    container.append(row2)
    row2.append(leftColumn)
    leftColumn.append(bicycleMap)
    bicycleMap.append(bicycleMapImage)
    homeImage.append(mainHomeImage)
    leftColumn.append(titleColumn)
    titleColumn.append(imageTitle)
    titleColumn.append(br)
    titleColumn.append(date)
    row2.append(homeImage)

    main.append(pageWrapper)

  })

})
    
  
  let count = imageposts[0].totalCount[0].count
  console.log(count)
  //console.log(data[0].totalData)
})
.catch(function(err) {
  console.log('Something went wrong!', err)
});
page = incrementPage();
console.log(page)
}

</script>

</html>
