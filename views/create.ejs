<!DOCTYPE html>
<html lang="en">

<%- include('layouts/header'); -%>

<body>

  <div id="page-wrapper">
    <div class="container">
      <div class="upload-row-1">
        
        <div class="upload-logo">STAY GOLDEN</div>
      </div>
      <div class="upload-row-2">
        <div class="upload-button">
        <label for="file-input" class="custom-file-upload">
          Select File
        </label>
        <input type="file" id="file-input">
        </div>
      </div>
      <div class="upload-row-3">
        <div id="progress"></div>
      </div>
    </div>
  </div>
</div>

<script type="module">
  
  //exifr allows for exif data to be extracted client-side. Since images are sent to S3
  //and not Heroku server exif needed to be extracted client-side. Then exif data is sent to server
  //and mongodb while image is sent to AWS S3

  import exifr from '/exifr/dist/full.esm.js'
  
  function $id(id) {
		return document.getElementById(id);
	}
  
  function uploadFile(file, signedRequest, url){
    const xhr = new XMLHttpRequest();
    if (xhr.upload && file.type == "image/jpeg") {
	
      // create progress bar
      var o = $id("progress");
      var progress = o.appendChild(document.createElement("p"));

      // progress bar
		  xhr.upload.addEventListener("progress", function(e) {
			var pc = parseInt(100 - (e.loaded / e.total * 100));
			progress.style.backgroundPosition = pc + "% 0";
		}, false);
  
    // file received/failed
		xhr.onreadystatechange = function(e) {
			if (xhr.readyState == 4) {
				progress.className = (xhr.status == 200 ? "success" : "failure");
			}
		};
  }

    xhr.open('PUT', signedRequest);
    xhr.onreadystatechange = () => {
      if(xhr.readyState === 4){
        if(xhr.status === 200){
          console.log('success');
          setTimeout(function(){ window.location = "/"; }, 3000); // Give AWS lambda function time to resize uploaded image for loading homepage.
          
        }
        else{
          alert('Could not upload file.')
        }
      }
    };
    xhr.send(file);
  }
  
  function getSignedRequest(file){
    console.log(file)
    const xhr = new XMLHttpRequest();
    xhr.open('GET', `/sign-s3?file-name=${file.name}&file-type=${file.type}`);
    xhr.onreadystatechange = () => {
      if(xhr.readyState === 4){
        if(xhr.status === 200){
          const response = JSON.parse(xhr.responseText);
          uploadFile(file, response.signedRequest, response.url);
        }
        else{
          alert('Could not get signed URL.');
        }
      }
    };
    xhr.send();
  }

  //Function extracting exif data from image then sending exif date to Node for processing.
  async function getExifData(file){
    let exifData = await exifr.parse(file)
    const xhr = new XMLHttpRequest();
    xhr.open('POST', `/sendExifData?file-name=${file.name}`);  
    xhr.setRequestHeader('Content-type','application/json')
    xhr.send(JSON.stringify(exifData));
    xhr.onreadystatechange = () => {
      if(xhr.readyState === 4){
        if(xhr.status === 200){
          getSignedRequest(file); //If image contains exif a signed URL is requested and image proceeds to upload.
        }
      }
        else if(xhr.status === 404){
        alert('Image does not contain exif data. Please choose another file.')
        }
      }
    };

  function initUpload() {
    const files = document.getElementById('file-input').files;
    const file = files[0];
    if(file == null){
      return alert('No file selected.');
    }
    
    getExifData(file); 
  }

  (() => {
    document.getElementById('file-input').onchange = initUpload; 
      
  })();
  
</script>

</body>

</html>
